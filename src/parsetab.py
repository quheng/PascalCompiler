
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '4007DD66C709DCA2C8A9A7A9E0476E4E'
    
_lr_action_items = {'REAL':([31,35,47,49,66,67,74,78,79,84,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,165,170,171,185,186,197,198,201,210,212,223,226,227,228,229,236,241,254,256,257,258,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-89,68,68,68,68,68,68,-88,68,-86,-85,68,68,68,68,68,-90,-91,]),'THEN':([68,69,70,71,73,77,80,81,82,83,94,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,149,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-117,-118,-119,]),'CONST':([2,4,5,16,99,101,],[-123,-5,10,-2,-123,-123,]),'DO':([68,69,70,71,73,77,80,81,82,83,95,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,220,221,245,248,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,150,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-117,-118,-119,259,]),'SYS_FUNCT':([35,47,49,74,76,78,79,84,90,91,92,123,124,126,127,128,129,130,131,132,134,135,137,138,139,140,142,143,170,171,197,198,226,227,228,229,],[76,76,76,76,120,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-86,-85,76,]),'EQUAL':([21,29,30,68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[31,66,67,-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,135,135,135,135,-114,135,-113,135,135,135,-116,135,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,135,135,135,-117,-118,135,135,-119,135,135,]),'CHAR':([31,35,47,49,66,67,74,78,79,84,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,165,170,171,185,186,197,198,201,210,212,223,226,227,228,229,236,241,254,256,257,258,],[71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-89,71,71,71,71,71,71,-88,71,-86,-85,71,71,71,71,71,-90,-91,]),'SYS_PROC':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,33,-59,-123,33,33,-58,33,33,33,33,33,33,]),'PROGRAM':([0,],[3,]),'MUL':([68,69,70,71,73,77,80,81,82,121,133,172,175,176,177,178,179,180,181,182,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,127,-114,-113,-116,-115,-109,-106,-107,-108,127,127,127,-117,-118,-119,]),'PLUS':([68,69,70,71,73,77,80,81,82,83,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,130,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,130,130,130,130,130,130,-117,-118,-119,]),'UNEQUAL':([68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,140,140,140,140,-114,140,-113,140,140,140,-116,140,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,140,140,140,-117,-118,140,140,-119,140,140,]),'DIV':([68,69,70,71,73,77,80,81,82,121,133,172,175,176,177,178,179,180,181,182,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,128,-114,-113,-116,-115,-109,-106,-107,-108,128,128,128,-117,-118,-119,]),'MINUS':([35,47,49,66,68,69,70,71,73,74,77,78,79,80,81,82,83,84,90,91,92,103,121,123,124,126,127,128,129,130,131,132,133,134,135,137,138,139,140,142,143,165,170,171,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,197,198,201,212,220,221,226,227,228,229,236,241,245,256,],[78,78,78,106,-11,-13,-14,-12,-10,78,-112,78,78,-110,-111,-105,131,78,78,78,78,106,-114,78,78,78,78,78,78,78,78,78,-113,78,78,78,78,78,78,78,78,106,78,78,-116,-115,-109,-106,-107,-108,-102,-103,-104,131,131,131,131,131,131,78,78,106,106,-117,-118,78,-86,-85,78,106,254,-119,106,]),'DOT':([7,13,14,42,46,68,69,70,71,73,81,105,112,159,160,167,211,],[15,-3,-57,-78,93,-11,-13,-14,-12,-10,125,159,167,210,211,217,241,]),'STRING':([31,35,47,49,66,67,74,78,79,84,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,165,170,171,185,186,197,198,201,210,212,223,226,227,228,229,236,241,254,256,257,258,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,-89,69,69,69,69,69,69,-88,69,-86,-85,69,69,69,69,69,-90,-91,]),'CASE':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,35,-59,-123,35,35,-58,35,35,35,35,35,35,]),'BEGIN':([2,4,5,6,9,11,12,16,17,18,20,22,23,24,25,27,28,41,54,55,56,58,62,63,65,86,87,89,97,98,99,101,104,117,149,150,166,168,207,208,209,224,225,233,259,],[-123,-5,-123,12,-123,-7,-123,-2,-123,-16,-6,12,-59,-123,-37,-18,-15,-123,-43,-4,-45,-44,-39,-36,-17,12,12,-58,-41,-42,-123,-123,-38,-9,12,12,-19,-8,-46,-48,-40,12,12,12,12,]),'LE':([68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,137,137,137,137,-114,137,-113,137,137,137,-116,137,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,137,137,137,-117,-118,137,137,-119,137,137,]),'LB':([46,81,109,],[90,123,165,]),'SEMI':([8,13,14,32,33,36,37,38,39,42,44,45,46,48,50,51,52,57,60,68,69,70,71,72,73,75,77,80,81,82,83,100,110,111,112,113,114,115,116,121,133,141,147,152,154,155,156,158,169,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,196,199,200,205,206,213,215,220,221,222,231,232,234,235,238,240,242,244,245,246,247,249,250,251,252,253,260,261,262,],[16,-3,-57,-63,-75,-69,-61,-62,-66,-78,89,-68,-74,-65,-64,-67,-70,99,101,-11,-13,-14,-12,117,-10,-92,-112,-110,-111,-105,-101,-123,-21,166,-30,-29,-22,-20,168,-114,-113,-60,-71,-51,207,-49,208,209,-77,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-82,-76,-123,-83,-53,239,-122,-31,-117,-118,-87,-73,-81,-79,-47,-50,-32,255,-33,-119,257,258,-72,-80,-54,-52,-34,-35,-23,-84,]),'TO':([68,69,70,71,73,77,80,81,82,83,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,194,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,228,-117,-118,-119,]),'RB':([68,69,70,71,73,77,80,81,82,83,112,113,121,133,144,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,215,216,220,221,240,244,245,253,260,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,-30,-29,-114,-113,195,-116,220,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-31,243,-117,-118,-32,-33,-119,-34,-35,]),'ID':([3,10,12,19,20,22,23,26,27,28,35,41,43,47,49,53,59,62,63,65,66,74,78,79,84,86,87,89,90,91,92,93,102,103,104,107,108,117,123,124,125,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,149,150,153,161,163,165,166,168,170,171,185,186,197,198,201,204,209,212,214,217,223,224,225,226,227,228,229,233,236,239,255,256,257,258,259,],[8,21,-123,29,30,46,-59,64,-18,29,81,-123,88,81,81,96,100,-39,64,-17,112,81,81,81,81,46,46,-58,81,81,81,148,157,112,-38,64,64,-9,81,81,175,81,81,81,81,81,81,81,81,81,188,81,81,81,81,81,81,46,46,64,-25,64,112,-19,-8,81,81,-89,188,81,81,112,64,-40,112,-24,244,-88,46,46,81,-86,-85,81,46,112,64,-26,112,-90,-91,46,]),'RECORD':([66,103,212,256,],[107,107,107,107,]),'LT':([68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,138,138,138,138,-114,138,-113,138,138,138,-116,138,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,138,138,138,-117,-118,138,138,-119,138,138,]),'COLON':([40,61,64,68,69,70,71,73,96,151,152,157,162,187,188,202,203,237,238,],[86,103,-28,-11,-13,-14,-12,-10,-123,201,-51,-27,212,224,225,-56,236,-55,-50,]),'SYS_TYPE':([66,103,165,201,212,236,256,],[113,113,113,113,113,113,113,]),'LP':([33,35,46,47,49,66,74,78,79,81,84,90,91,92,96,100,103,120,123,124,126,127,128,129,130,131,132,134,135,137,138,139,140,142,143,165,170,171,197,198,201,212,226,227,228,229,236,256,],[74,79,91,79,79,108,79,79,79,124,79,79,79,79,153,153,108,171,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,108,79,79,79,79,108,108,79,-86,-85,79,108,108,]),'INTEGER':([12,22,23,31,34,35,41,47,49,66,67,74,78,79,84,87,89,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,149,150,165,170,171,185,186,197,198,201,210,212,223,224,225,226,227,228,229,233,236,241,254,256,257,258,259,],[-123,40,-59,73,75,73,-123,73,73,73,73,73,73,73,73,40,-58,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,73,40,40,73,73,73,-89,73,73,73,73,73,73,-88,40,40,73,-86,-85,73,40,73,73,73,73,-90,-91,40,]),'ARRAY':([66,103,212,256,],[109,109,109,109,]),'ASSIGN':([46,88,148,195,],[92,143,198,229,]),'$end':([1,15,],[0,-1,]),'FUNCTION':([2,4,5,9,11,16,17,18,20,24,25,27,28,54,55,56,58,62,63,65,97,98,99,101,104,117,166,168,207,208,209,],[-123,-5,-123,-123,-7,-2,-123,-16,-6,53,-37,-18,-15,-43,53,-45,-44,-39,-36,-17,-41,-42,-123,-123,-38,-9,-19,-8,-46,-48,-40,]),'REPEAT':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,41,-59,-123,41,41,-58,41,41,41,41,41,41,]),'END':([12,22,23,89,161,163,185,186,214,223,255,257,258,],[-123,42,-59,-58,-25,213,-89,222,-24,-88,-26,-90,-91,]),'GOTO':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,34,-59,-123,34,34,-58,34,34,34,34,34,34,]),'FOR':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,43,-59,-123,43,43,-58,43,43,43,43,43,43,]),'ELSE':([32,33,36,37,38,39,42,45,46,48,50,51,52,68,69,70,71,73,75,77,80,81,82,83,121,133,141,147,169,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,196,199,200,220,221,222,231,232,234,245,249,250,262,],[-63,-75,-69,-61,-62,-66,-78,-68,-74,-65,-64,-67,-70,-11,-13,-14,-12,-10,-92,-112,-110,-111,-105,-101,-114,-113,-60,-71,-77,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-82,-76,233,-83,-117,-118,-87,-73,-81,-79,-119,-72,-80,-84,]),'GE':([68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,139,139,139,139,-114,139,-113,139,139,139,-116,139,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,139,139,139,-117,-118,139,139,-119,139,139,]),'VAR':([2,4,5,9,11,16,17,18,20,27,28,65,99,101,117,153,166,168,239,],[-123,-5,-123,-123,-7,-2,26,-16,-6,-18,-15,-17,-123,-123,-9,204,-19,-8,204,]),'RP':([64,68,69,70,71,73,77,80,81,82,83,112,113,118,119,121,122,133,145,146,157,164,172,174,175,176,177,178,179,180,181,182,183,184,189,190,191,192,205,206,215,218,219,220,221,230,240,244,245,251,252,253,260,],[-28,-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,-30,-29,169,-94,-114,172,-113,196,-121,-27,215,-116,221,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-53,238,-31,-93,245,-117,-118,-120,-32,-33,-119,-54,-52,-34,-35,]),'UNTIL':([23,41,87,89,],[-59,-123,142,-58,]),'PROCEDURE':([2,4,5,9,11,16,17,18,20,24,25,27,28,54,55,56,58,62,63,65,97,98,99,101,104,117,166,168,207,208,209,],[-123,-5,-123,-123,-7,-2,-123,-16,-6,59,-37,-18,-15,-43,59,-45,-44,-39,-36,-17,-41,-42,-123,-123,-38,-9,-19,-8,-46,-48,-40,]),'IF':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,47,-59,-123,47,47,-58,47,47,47,47,47,47,]),'AND':([68,69,70,71,73,77,80,81,82,121,133,172,175,176,177,178,179,180,181,182,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,126,-114,-113,-116,-115,-109,-106,-107,-108,126,126,126,-117,-118,-119,]),'GT':([68,69,70,71,73,77,80,81,82,83,85,94,95,119,121,122,133,144,146,147,172,173,175,176,177,178,179,180,181,182,183,184,189,190,191,192,193,194,218,220,221,230,231,245,248,249,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,134,134,134,134,-114,134,-113,134,134,134,-116,134,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,134,134,134,-117,-118,134,134,-119,134,134,]),'OF':([68,69,70,71,73,77,80,81,82,83,85,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,220,221,243,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,136,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,-117,-118,256,-119,]),'WHILE':([12,22,23,41,86,87,89,149,150,224,225,233,259,],[-123,49,-59,-123,49,49,-58,49,49,49,49,49,49,]),'OR':([68,69,70,71,73,77,80,81,82,83,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,132,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,132,132,132,132,132,132,-117,-118,-119,]),'DOWNTO':([68,69,70,71,73,77,80,81,82,83,121,133,172,175,176,177,178,179,180,181,182,183,184,189,190,191,192,194,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,-114,-113,-116,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,227,-117,-118,-119,]),'NOT':([35,47,49,74,78,79,84,90,91,92,123,124,126,127,128,129,130,131,132,134,135,137,138,139,140,142,143,170,171,197,198,226,227,228,229,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,-86,-85,84,]),'COMMA':([61,64,68,69,70,71,73,77,80,81,82,83,118,119,121,133,145,146,157,162,164,172,174,175,176,177,178,179,180,181,182,183,184,189,190,191,192,202,218,219,220,221,230,237,245,],[102,-28,-11,-13,-14,-12,-10,-112,-110,-111,-105,-101,170,-94,-114,-113,197,-121,-27,102,102,-116,197,-115,-109,-106,-107,-108,-102,-103,-104,-96,-99,-97,-98,-95,-100,102,-93,197,-117,-118,-120,102,-119,]),'TYPE':([2,4,5,9,11,16,20,99,101,117,168,],[-123,-5,-123,19,-7,-2,-6,-123,-123,-9,-8,]),'SYS_CON':([31,35,47,49,66,67,74,78,79,84,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,165,170,171,185,186,197,198,201,210,212,223,226,227,228,229,236,241,254,256,257,258,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,-89,70,70,70,70,70,70,-88,70,-86,-85,70,70,70,70,70,-90,-91,]),'MOD':([68,69,70,71,73,77,80,81,82,121,133,172,175,176,177,178,179,180,181,182,220,221,245,],[-11,-13,-14,-12,-10,-112,-110,-111,129,-114,-113,-116,-115,-109,-106,-107,-108,129,129,129,-117,-118,-119,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'else_clause':([199,],[234,]),'case_expr':([136,186,],[185,223,]),'routine_part':([24,],[55,]),'direction':([194,],[226,]),'type_definition':([19,28,],[27,65,]),'proc_stmt':([22,86,87,149,150,224,225,233,259,],[32,32,32,32,32,32,32,32,32,]),'var_decl_list':([26,],[63,]),'routine_body':([6,],[13,]),'procedure_decl':([24,55,],[58,98,]),'parameters':([96,100,],[151,155,]),'para_decl_list':([153,],[206,]),'case_stmt':([22,86,87,149,150,224,225,233,259,],[36,36,36,36,36,36,36,36,36,]),'non_label_stmt':([22,86,87,149,150,224,225,233,259,],[37,141,37,37,37,37,37,37,37,]),'procedure_head':([24,55,],[60,60,]),'simple_type_decl':([66,103,165,201,212,236,256,],[115,115,216,235,115,251,115,]),'const_expr_list':([10,],[20,]),'function_head':([24,55,],[57,57,]),'assign_stmt':([22,86,87,149,150,224,225,233,259,],[38,38,38,38,38,38,38,38,38,]),'repeat_stmt':([22,86,87,149,150,224,225,233,259,],[39,39,39,39,39,39,39,39,39,]),'program':([0,],[1,]),'routine_head':([2,99,101,],[6,6,6,]),'routine':([2,99,101,],[7,154,156,]),'compound_stmt':([6,22,86,87,149,150,224,225,233,259,],[14,50,50,50,50,50,50,50,50,50,]),'array_type_decl':([66,103,212,256,],[110,110,110,110,]),'field_decl':([107,163,],[161,214,]),'type_part':([9,],[17,]),'var_part':([17,],[24,]),'epsilon':([2,5,9,12,17,24,41,96,99,100,101,199,],[4,11,18,23,25,56,23,152,4,152,4,232,]),'factor':([35,47,49,74,78,79,84,90,91,92,123,124,126,127,128,129,130,131,132,134,135,137,138,139,140,142,143,170,171,197,198,226,229,],[80,80,80,80,121,80,133,80,80,80,80,80,176,177,178,179,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'function_decl':([24,55,],[54,97,]),'stmt':([22,87,149,150,224,225,233,259,],[44,44,199,200,246,247,250,262,]),'name_list':([26,63,107,108,153,163,204,239,],[61,61,162,164,202,162,237,202,]),'for_stmt':([22,86,87,149,150,224,225,233,259,],[45,45,45,45,45,45,45,45,45,]),'case_expr_list':([136,],[186,]),'term':([35,47,49,74,79,90,91,92,123,124,130,131,132,134,135,137,138,139,140,142,143,170,171,197,198,226,229,],[82,82,82,82,82,82,82,82,82,82,180,181,182,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'type_decl':([66,103,212,256,],[111,158,242,261,]),'type_decl_list':([19,],[28,]),'args_list':([91,124,171,],[145,174,219,]),'stmt_list':([12,41,],[22,87,]),'const_part':([5,],[9,]),'label_part':([2,99,101,],[5,5,5,]),'if_stmt':([22,86,87,149,150,224,225,233,259,],[48,48,48,48,48,48,48,48,48,]),'expr':([35,47,49,74,79,90,91,92,123,124,134,135,137,138,139,140,142,143,170,171,197,198,226,229,],[83,83,83,83,83,83,83,83,83,83,183,184,189,190,191,192,83,83,83,83,83,83,83,83,]),'expression_list':([74,],[118,]),'var_para_list':([153,239,],[203,203,]),'var_decl':([26,63,],[62,104,]),'program_head':([0,],[2,]),'while_stmt':([22,86,87,149,150,224,225,233,259,],[51,51,51,51,51,51,51,51,51,]),'record_type_decl':([66,103,212,256,],[114,114,114,114,]),'goto_stmt':([22,86,87,149,150,224,225,233,259,],[52,52,52,52,52,52,52,52,52,]),'const_value':([31,35,47,49,66,67,74,78,79,84,90,91,92,103,106,123,124,126,127,128,129,130,131,132,134,135,136,137,138,139,140,142,143,165,170,171,186,197,198,201,210,212,226,229,236,241,254,256,],[72,77,77,77,105,116,77,77,77,77,77,77,77,105,160,77,77,77,77,77,77,77,77,77,77,77,187,77,77,77,77,77,77,105,77,77,187,77,77,105,240,105,77,77,105,253,260,105,]),'para_type_list':([153,239,],[205,252,]),'expression':([35,47,49,74,79,90,91,92,123,124,142,143,170,171,197,198,226,229,],[85,94,95,119,122,144,146,147,173,146,193,194,218,146,230,231,248,249,]),'field_decl_list':([107,],[163,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program_head routine DOT','program',3,'p_program','grammars.py',15),
  ('program_head -> PROGRAM ID SEMI','program_head',3,'p_program_head','grammars.py',19),
  ('routine -> routine_head routine_body','routine',2,'p_routine','grammars.py',23),
  ('routine_head -> label_part const_part type_part var_part routine_part','routine_head',5,'p_routine_head','grammars.py',27),
  ('label_part -> epsilon','label_part',1,'p_label_part','grammars.py',31),
  ('const_part -> CONST const_expr_list','const_part',2,'p_const_part','grammars.py',36),
  ('const_part -> epsilon','const_part',1,'p_const_part','grammars.py',37),
  ('const_expr_list -> const_expr_list ID EQUAL const_value SEMI','const_expr_list',5,'p_const_expr_list','grammars.py',46),
  ('const_expr_list -> ID EQUAL const_value SEMI','const_expr_list',4,'p_const_expr_list','grammars.py',47),
  ('const_value -> INTEGER','const_value',1,'p_const_value','grammars.py',56),
  ('const_value -> REAL','const_value',1,'p_const_value','grammars.py',57),
  ('const_value -> CHAR','const_value',1,'p_const_value','grammars.py',58),
  ('const_value -> STRING','const_value',1,'p_const_value','grammars.py',59),
  ('const_value -> SYS_CON','const_value',1,'p_const_value','grammars.py',60),
  ('type_part -> TYPE type_decl_list','type_part',2,'p_type_part','grammars.py',66),
  ('type_part -> epsilon','type_part',1,'p_type_part','grammars.py',67),
  ('type_decl_list -> type_decl_list type_definition','type_decl_list',2,'p_type_decl_list','grammars.py',76),
  ('type_decl_list -> type_definition','type_decl_list',1,'p_type_decl_list','grammars.py',77),
  ('type_definition -> ID EQUAL type_decl SEMI','type_definition',4,'p_type_definition','grammars.py',86),
  ('type_decl -> simple_type_decl','type_decl',1,'p_type_decl','grammars.py',92),
  ('type_decl -> array_type_decl','type_decl',1,'p_type_decl','grammars.py',93),
  ('type_decl -> record_type_decl','type_decl',1,'p_type_decl','grammars.py',94),
  ('array_type_decl -> ARRAY LB simple_type_decl RB OF type_decl','array_type_decl',6,'p_array_type_decl','grammars.py',100),
  ('field_decl_list -> field_decl_list field_decl','field_decl_list',2,'p_field_decl_list','grammars.py',106),
  ('field_decl_list -> field_decl','field_decl_list',1,'p_field_decl_list','grammars.py',107),
  ('field_decl -> name_list COLON type_decl SEMI','field_decl',4,'p_field_decl','grammars.py',116),
  ('name_list -> name_list COMMA ID','name_list',3,'p_name_list','grammars.py',122),
  ('name_list -> ID','name_list',1,'p_name_list','grammars.py',123),
  ('simple_type_decl -> SYS_TYPE','simple_type_decl',1,'p_simple_type_decl','grammars.py',132),
  ('simple_type_decl -> ID','simple_type_decl',1,'p_simple_type_decl','grammars.py',133),
  ('simple_type_decl -> LP name_list RP','simple_type_decl',3,'p_simple_type_decl','grammars.py',134),
  ('simple_type_decl -> const_value DOT DOT const_value','simple_type_decl',4,'p_simple_type_decl','grammars.py',135),
  ('simple_type_decl -> ID DOT DOT ID','simple_type_decl',4,'p_simple_type_decl','grammars.py',136),
  ('simple_type_decl -> MINUS const_value DOT DOT const_value','simple_type_decl',5,'p_simple_type_decl','grammars.py',137),
  ('simple_type_decl -> MINUS const_value DOT DOT MINUS const_value','simple_type_decl',6,'p_simple_type_decl','grammars.py',138),
  ('var_part -> VAR var_decl_list','var_part',2,'p_var_part','grammars.py',156),
  ('var_part -> epsilon','var_part',1,'p_var_part','grammars.py',157),
  ('var_decl_list -> var_decl_list var_decl','var_decl_list',2,'p_var_decl_list','grammars.py',166),
  ('var_decl_list -> var_decl','var_decl_list',1,'p_var_decl_list','grammars.py',167),
  ('var_decl -> name_list COLON type_decl SEMI','var_decl',4,'p_var_decl','grammars.py',176),
  ('routine_part -> routine_part function_decl','routine_part',2,'p_routine_part','grammars.py',182),
  ('routine_part -> routine_part procedure_decl','routine_part',2,'p_routine_part','grammars.py',183),
  ('routine_part -> function_decl','routine_part',1,'p_routine_part','grammars.py',184),
  ('routine_part -> procedure_decl','routine_part',1,'p_routine_part','grammars.py',185),
  ('routine_part -> epsilon','routine_part',1,'p_routine_part','grammars.py',186),
  ('function_decl -> function_head SEMI routine SEMI','function_decl',4,'p_function_decl','grammars.py',195),
  ('function_head -> FUNCTION ID parameters COLON simple_type_decl','function_head',5,'p_function_head','grammars.py',201),
  ('procedure_decl -> procedure_head SEMI routine SEMI','procedure_decl',4,'p_procedure_decl','grammars.py',207),
  ('procedure_head -> PROCEDURE ID parameters','procedure_head',3,'p_procedure_head','grammars.py',213),
  ('parameters -> LP para_decl_list RP','parameters',3,'p_parameters','grammars.py',219),
  ('parameters -> epsilon','parameters',1,'p_parameters','grammars.py',220),
  ('para_decl_list -> para_decl_list SEMI para_type_list','para_decl_list',3,'p_para_decl_list','grammars.py',229),
  ('para_decl_list -> para_type_list','para_decl_list',1,'p_para_decl_list','grammars.py',230),
  ('para_type_list -> var_para_list COLON simple_type_decl','para_type_list',3,'p_para_type_list','grammars.py',239),
  ('var_para_list -> VAR name_list','var_para_list',2,'p_var_para_list','grammars.py',245),
  ('var_para_list -> name_list','var_para_list',1,'p_var_para_list','grammars.py',246),
  ('routine_body -> compound_stmt','routine_body',1,'p_routine_body','grammars.py',255),
  ('stmt_list -> stmt_list stmt SEMI','stmt_list',3,'p_stmt_list','grammars.py',261),
  ('stmt_list -> epsilon','stmt_list',1,'p_stmt_list','grammars.py',262),
  ('stmt -> INTEGER COLON non_label_stmt','stmt',3,'p_stmt','grammars.py',271),
  ('stmt -> non_label_stmt','stmt',1,'p_stmt','grammars.py',272),
  ('non_label_stmt -> assign_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',281),
  ('non_label_stmt -> proc_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',282),
  ('non_label_stmt -> compound_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',283),
  ('non_label_stmt -> if_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',284),
  ('non_label_stmt -> repeat_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',285),
  ('non_label_stmt -> while_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',286),
  ('non_label_stmt -> for_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',287),
  ('non_label_stmt -> case_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',288),
  ('non_label_stmt -> goto_stmt','non_label_stmt',1,'p_non_label_stmt','grammars.py',289),
  ('assign_stmt -> ID ASSIGN expression','assign_stmt',3,'p_assign_stmt','grammars.py',295),
  ('assign_stmt -> ID LB expression RB ASSIGN expression','assign_stmt',6,'p_assign_stmt','grammars.py',296),
  ('assign_stmt -> ID DOT ID ASSIGN expression','assign_stmt',5,'p_assign_stmt','grammars.py',297),
  ('proc_stmt -> ID','proc_stmt',1,'p_proc_stmt','grammars.py',308),
  ('proc_stmt -> SYS_PROC','proc_stmt',1,'p_proc_stmt','grammars.py',309),
  ('proc_stmt -> ID LP args_list RP','proc_stmt',4,'p_proc_stmt','grammars.py',310),
  ('proc_stmt -> SYS_PROC LP expression_list RP','proc_stmt',4,'p_proc_stmt','grammars.py',311),
  ('compound_stmt -> BEGIN stmt_list END','compound_stmt',3,'p_compound_stmt','grammars.py',323),
  ('if_stmt -> IF expression THEN stmt else_clause','if_stmt',5,'p_if_stmt','grammars.py',329),
  ('else_clause -> ELSE stmt','else_clause',2,'p_else_clause','grammars.py',336),
  ('else_clause -> epsilon','else_clause',1,'p_else_clause','grammars.py',337),
  ('repeat_stmt -> REPEAT stmt_list UNTIL expression','repeat_stmt',4,'p_repeat_stmt','grammars.py',346),
  ('while_stmt -> WHILE expression DO stmt','while_stmt',4,'p_while_stmt','grammars.py',352),
  ('for_stmt -> FOR ID ASSIGN expression direction expression DO stmt','for_stmt',8,'p_for_stmt','grammars.py',358),
  ('direction -> TO','direction',1,'p_direction','grammars.py',364),
  ('direction -> DOWNTO','direction',1,'p_direction','grammars.py',365),
  ('case_stmt -> CASE expression OF case_expr_list END','case_stmt',5,'p_case_stmt','grammars.py',371),
  ('case_expr_list -> case_expr_list case_expr','case_expr_list',2,'p_case_expr_list','grammars.py',377),
  ('case_expr_list -> case_expr','case_expr_list',1,'p_case_expr_list','grammars.py',378),
  ('case_expr -> const_value COLON stmt SEMI','case_expr',4,'p_case_expr','grammars.py',387),
  ('case_expr -> ID COLON stmt SEMI','case_expr',4,'p_case_expr','grammars.py',388),
  ('goto_stmt -> GOTO INTEGER','goto_stmt',2,'p_goto_stmt','grammars.py',394),
  ('expression_list -> expression_list COMMA expression','expression_list',3,'p_expression_list','grammars.py',400),
  ('expression_list -> expression','expression_list',1,'p_expression_list','grammars.py',401),
  ('expression -> expression GE expr','expression',3,'p_expression','grammars.py',410),
  ('expression -> expression GT expr','expression',3,'p_expression','grammars.py',411),
  ('expression -> expression LE expr','expression',3,'p_expression','grammars.py',412),
  ('expression -> expression LT expr','expression',3,'p_expression','grammars.py',413),
  ('expression -> expression EQUAL expr','expression',3,'p_expression','grammars.py',414),
  ('expression -> expression UNEQUAL expr','expression',3,'p_expression','grammars.py',415),
  ('expression -> expr','expression',1,'p_expression','grammars.py',416),
  ('expr -> expr PLUS term','expr',3,'p_expr','grammars.py',425),
  ('expr -> expr MINUS term','expr',3,'p_expr','grammars.py',426),
  ('expr -> expr OR term','expr',3,'p_expr','grammars.py',427),
  ('expr -> term','expr',1,'p_expr','grammars.py',428),
  ('term -> term MUL factor','term',3,'p_term','grammars.py',438),
  ('term -> term DIV factor','term',3,'p_term','grammars.py',439),
  ('term -> term MOD factor','term',3,'p_term','grammars.py',440),
  ('term -> term AND factor','term',3,'p_term','grammars.py',441),
  ('term -> factor','term',1,'p_term','grammars.py',442),
  ('factor -> ID','factor',1,'p_factor','grammars.py',451),
  ('factor -> const_value','factor',1,'p_factor','grammars.py',452),
  ('factor -> NOT factor','factor',2,'p_factor','grammars.py',453),
  ('factor -> MINUS factor','factor',2,'p_factor','grammars.py',454),
  ('factor -> ID DOT ID','factor',3,'p_factor','grammars.py',455),
  ('factor -> LP expression RP','factor',3,'p_factor','grammars.py',456),
  ('factor -> ID LB expression RB','factor',4,'p_factor','grammars.py',457),
  ('factor -> ID LP args_list RP','factor',4,'p_factor','grammars.py',458),
  ('factor -> SYS_FUNCT SYS_FUNCT LP args_list RP','factor',5,'p_factor','grammars.py',459),
  ('args_list -> args_list COMMA expression','args_list',3,'p_args_list','grammars.py',474),
  ('args_list -> expression','args_list',1,'p_args_list','grammars.py',475),
  ('record_type_decl -> RECORD field_decl_list END','record_type_decl',3,'p_record_type_decl','grammars.py',484),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','grammars.py',489),
]
